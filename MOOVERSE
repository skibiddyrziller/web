
<head>
    <title>Moo Verse</title>
    <!-- Add this line -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Other head elements... -->
    <script src="particles.js"></script>
    <style>
        .tabs-container {
            position: relative;
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            height: 100vh;
            display: flex;
            flex-direction: column;
            z-index: 1;
            padding-top: 10px;
        }

        .tabs {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-bottom: 10px;
            width: 60%;
            margin-left: auto;
            margin-right: auto;
            background: rgba(13, 0, 20, 0.4);
            padding: 15px;
            backdrop-filter: blur(8px);
            border-radius: 50px;
        }

        .tab-button {
            padding: 10px 20px;
            background: rgba(13, 0, 20, 0.7);
            border: none;
            color: white;
            cursor: pointer;
            border-radius: 4px;
            transition: all 0.3s ease;
            font-weight: 500;
            font-size: 15px;
            text-transform: capitalize;
            position: relative;
            opacity: 0;
            animation: tabButtonFadeIn 0.5s ease forwards;
        }

        .tab-button:hover {
            background: rgba(43, 0, 51, 0.8);
        }

        .tab-button.active {
            background: rgba(43, 0, 51, 0.9);
            box-shadow: 0 0 15px rgba(88, 101, 242, 0.2);
        }

        .tab-button.active::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 100%;
            height: 2px;
            background: rgba(88, 101, 242, 0.8);
            box-shadow: 0 0 8px rgba(88, 101, 242, 0.5);
        }

        .content-wrapper {
            position: relative;
            width: 60%;
            max-width: 800px;
            margin: 0 auto;
            background: rgba(13, 0, 20, 0.75);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.05);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
            padding: 20px;
            max-height: 1000px;
            overflow: hidden;
            opacity: 0;
            animation: contentFadeIn 0.5s ease forwards;
            animation-delay: 0.7s;
        }

        .tab-content {
            display: none;
            padding: 15px;
            color: white;
            position: absolute;
            width: calc(100% - 30px);
            left: 0;
            right: 0;
            opacity: 0;
            transform: translateX(50px);
            transition: transform 0.3s ease, opacity 0.3s ease;
        }

        .tab-content.active {
            display: block;
            opacity: 1;
            transform: translateX(0);
            position: relative;
        }

        .tab-content h2 {
            font-size: 20px;
            margin-bottom: 15px;
            color: #fff;
            text-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
        }

        .tab-content p {
            font-size: 16px;
            line-height: 1.6;
            color: rgba(255, 255, 255, 0.9);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Optional: Add scrollbar styling for content overflow */
        .content-wrapper {
            overflow-y: auto;
        }

        .content-wrapper::-webkit-scrollbar,
        .grid::-webkit-scrollbar {
            width: 6px;  /* Thinner scrollbar */
        }

        .content-wrapper::-webkit-scrollbar-track,
        .grid::-webkit-scrollbar-track {
            background: rgba(13, 0, 20, 0.4);  /* Darker track */
            border-radius: 10px;
        }

        .content-wrapper::-webkit-scrollbar-thumb,
        .grid::-webkit-scrollbar-thumb {
            background: rgba(88, 101, 242, 0.4);  /* Purple-blue thumb */
            border-radius: 10px;
            border: 2px solid rgba(13, 0, 20, 0.4);  /* Border around thumb */
        }

        .content-wrapper::-webkit-scrollbar-thumb:hover,
        .grid::-webkit-scrollbar-thumb:hover {
            background: rgba(88, 101, 242, 0.6);  /* Brighter on hover */
        }

        /* For Firefox */
        .content-wrapper,
        .grid {
            scrollbar-width: thin;
            scrollbar-color: rgba(88, 101, 242, 0.4) rgba(13, 0, 20, 0.4);
        }

        body {
            margin: 0;
            min-height: 100vh;
            padding: 0;
            font-family: Arial, sans-serif;
            color: white;
            overflow: hidden;
        }

        .social-buttons {
            display: flex;
            gap: 20px;
            justify-content: center;
            margin-top: 20px;
        }

        .social-button {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 24px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 16px;
            text-decoration: none;
        }

        .social-button:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
        }

        .social-button.discord {
            background: rgba(88, 101, 242, 0.3);
        }

        .social-button.youtube {
            background: rgba(255, 0, 0, 0.3);
        }

        .social-button.discord:hover {
            background: rgba(88, 101, 242, 0.4);
        }

        .social-button.youtube:hover {
            background: rgba(255, 0, 0, 0.4);
        }

        .social-button i {
            font-size: 20px;
        }

        /* Add these styles */
        .pricing-container {
            display: flex;
            justify-content: center;
            gap: 20px;
            flex-wrap: wrap;
            padding: 20px 0;
        }

        .pricing-card {
            background: rgba(43, 0, 51, 0.4);
            backdrop-filter: blur(8px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            padding: 25px;
            width: 250px;
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .pricing-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

        .pricing-title {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #fff;
        }

        .pricing-price {
            font-size: 32px;
            color: #fff;
            margin: 15px 0;
            text-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
        }

        .pricing-features {
            list-style: none;
            padding: 0;
            margin: 20px 0;
        }

        .pricing-features li {
            margin: 10px 0;
            color: rgba(255, 255, 255, 0.9);
        }

        .pricing-button {
            background: rgba(88, 101, 242, 0.3);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            margin-top: 15px;
        }

        .pricing-button:hover {
            background: rgba(88, 101, 242, 0.5);
            transform: translateY(-2px);
        }

        /* Add these modal styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: rgba(13, 0, 20, 0.95);
            padding: 30px;
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            text-align: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
            animation: modalFadeIn 0.3s ease;
        }

        @keyframes modalFadeIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modal.active {
            display: flex;
        }

        /* Add these new styles */
        .search-bar {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin: 20px 0;
        }

        .search-bar input, 
        .search-bar select {
            padding: 10px;
            background: rgba(19, 0, 26, 0.6);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 6px;
            color: white;
            backdrop-filter: blur(8px);
        }

        .search-bar button {
            padding: 10px 20px;
            background: rgba(88, 101, 242, 0.3);
            border: none;
            color: white;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .search-bar button:hover {
            background: rgba(88, 101, 242, 0.5);
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }

        .card {
            background: rgba(19, 0, 26, 0.6);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            overflow: hidden;
            transition: transform 0.3s ease;
            backdrop-filter: blur(8px);
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card img {
            width: 100%;
            height: 150px;
            object-fit: cover;
        }

        .card-content {
            padding: 15px;
        }

        .pagination {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 20px;
        }

        .pagination button {
            padding: 8px 16px;
            background: rgba(88, 101, 242, 0.3);
            border: none;
            color: white;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .pagination button:hover {
            background: rgba(88, 101, 242, 0.5);
        }

        #error-message {
            text-align: center;
            color: #ff4444;
            margin: 10px 0;
        }

        .card-title {
            font-size: 1.1em;
            margin: 0 0 8px 0;
            color: white;
        }

        .card-game {
            font-size: 0.9em;
            color: rgba(255, 255, 255, 0.7);
            margin: 0;
        }

        .grid {
            margin: 20px 0;
            max-height: 600px;
            overflow-y: auto;
        }

        @keyframes tabButtonFadeIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Add animation delay for each button */
        .tab-button:nth-child(1) { animation-delay: 0.1s; }
        .tab-button:nth-child(2) { animation-delay: 0.2s; }
        .tab-button:nth-child(3) { animation-delay: 0.3s; }
        .tab-button:nth-child(4) { animation-delay: 0.4s; }
        .tab-button:nth-child(5) { animation-delay: 0.5s; }
        .tab-button:nth-child(6) { animation-delay: 0.6s; }

        @keyframes contentFadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .youtube-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
            margin: 20px 0;
            max-height: 600px;
            overflow-y: auto;
        }

        .video-card {
            background: rgba(19, 0, 26, 0.6);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            overflow: hidden;
            transition: transform 0.3s ease;
            cursor: pointer;
        }

        .video-card:hover {
            transform: translateY(-5px);
        }

        .video-thumbnail {
            width: 100%;
            aspect-ratio: 16/9;
            object-fit: cover;
        }

        .video-info {
            padding: 15px;
        }

        .video-title {
            font-size: 1.1em;
            margin: 0 0 8px 0;
            color: white;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .video-date {
            font-size: 0.9em;
            color: rgba(255, 255, 255, 0.7);
        }

        .video-sort {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 20px;
            position: sticky;
            top: 0;
            background: rgba(13, 0, 20, 0.85);
            padding: 15px;
            backdrop-filter: blur(8px);
            z-index: 10;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            transition: Background 0.3s ease, box-shadow 0.3s ease;
        }

        .video-sort:hover {
            background: rgba(13, 0, 20, 0.95);
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
        }

        .sort-button {
            padding: 8px 16px;
            background: rgba(19, 0, 26, 0.6);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 6px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            backdrop-filter: blur(8px);
            min-width: 120px;
        }

        .sort-button:hover {
            background: rgba(43, 0, 51, 0.8);
        }

        .sort-button.active {
            background: rgba(88, 101, 242, 0.3);
            border-color: rgba(88, 101, 242, 0.5);
        }

        /* Add these styles to your existing CSS */
        .video-views {
            font-size: 0.9em;
            color: rgba(255, 255, 255, 0.7);
            margin-top: 5px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .video-views i {
            font-size: 0.9em;
            color: rgba(88, 101, 242, 0.8);
        }

        /* Add styles for tab exit animation */
        .tab-content.fade-out {
            animation: tabSlideOut 0.3s ease forwards;
        }

        @keyframes tabSlideOut {
            from {
                opacity: 1;
                transform: translateX(0);
            }
            to {
                opacity: 0;
                transform: translateX(-20px);
            }
        }

        @keyframes tabSlideIn {
            from {
                opacity: 0;
                transform: translateX(20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        /* Slide animations */
        @keyframes slideOutLeft {
            from {
                opacity: 1;
                transform: translateX(0);
            }
            to {
                opacity: 0;
                transform: translateX(-30px);
            }
        }

        @keyframes slideOutRight {
            from {
                opacity: 1;
                transform: translateX(0);
            }
            to {
                opacity: 0;
                transform: translateX(30px);
            }
        }

        @keyframes slideInLeft {
            from {
                opacity: 0;
                transform: translateX(-30px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @keyframes slideInRight {
            from {
                opacity: 0;
                transform: translateX(30px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        /* Add these styles to your existing CSS */
        .credits-button {
            position: fixed;
            top: 20px;
            left: 20px;
            padding: 10px 20px;
            background: rgba(13, 0, 20, 0.7);
            border: 1px solid rgba(88, 101, 242, 0.3);
            border-radius: 8px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 100;
            font-size: 15px;
            backdrop-filter: blur(8px);
            display: flex;
            align-items: center;
            gap: 8px;
            opacity: 0;
            animation: creditsFadeIn 0.5s ease forwards;
            animation-delay: 1s;
        }

        .credits-button:hover {
            background: rgba(88, 101, 242, 0.2);
            border-color: rgba(88, 101, 242, 0.5);
            transform: translateY(-2px);
        }

        .credits-button i {
            font-size: 16px;
            color: rgba(88, 101, 242, 0.8);
        }

        @keyframes creditsFadeIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        /* Add these styles for the credits modal */
        .credits-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .credits-modal.active {
            display: flex;
        }

        .credits-content {
            background: rgba(13, 0, 20, 0.95);
            padding: 30px;
            border-radius: 12px;
            border: 1px solid rgba(88, 101, 242, 0.3);
            text-align: center;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
            animation: modalFadeIn 0.3s ease;
        }

        .credits-content h2 {
            color: white;
            margin-bottom: 20px;
        }

        .credits-content p {
            color: rgba(255, 255, 255, 0.8);
            margin: 10px 0;
            line-height: 1.6;
        }

        .credits-content .social-links {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }

        .credits-content .social-link {
            color: rgba(88, 101, 242, 0.8);
            font-size: 24px;
            transition: all 0.3s ease;
        }

        .credits-content .social-link:hover {
            color: rgba(88, 101, 242, 1);
            transform: scale(1.1);
        }
    </style>
</head>
<body>
    <button class="credits-button">
        <i class="fas fa-info-circle"></i>
        Credits
    </button>

    <div class="tabs-container">
        <div class="tabs">
            <button class="tab-button active" data-tab="tab1">Home</button>
            <button class="tab-button" data-tab="tab2">Socials</button>
            <button class="tab-button" data-tab="tab3">Azuz X</button>
            <button class="tab-button" data-tab="tab4">Moo Hub</button>
            <button class="tab-button" data-tab="tab5">Search Scripts</button>
            <button class="tab-button" data-tab="tab6">Uploads</button>
        </div>
        
        <div class="content-wrapper">
            <div id="tab1" class="tab-content active">
                <h2>Welcome to Moo Verse!</h2>
                <p>Tell Me What You Want To Add Here And I Will Do It!</p>
                <div class="content-section">
                    <!-- Add more structured content here -->
                </div>
            </div>
            
            <div id="tab2" class="tab-content">
                <h2>Socials</h2>
                <div class="content-section">
                    <p>Connect with us on our social platforms:</p>
                    <div class="social-buttons">
                        <a href="https://discord.gg/4k7ZjGyCW8" class="social-button discord">
                            <i class="fab fa-discord"></i>
                            Discord
                        </a>
                        <a href="https://www.youtube.com/@MooSpoit" class="social-button youtube">
                            <i class="fab fa-youtube"></i>
                            YouTube
                        </a>
                    </div>
                </div>
            </div>
            
            <div id="tab3" class="tab-content">
                <h2>Azuz X!</h2>
                <div class="pricing-container">
                    <div class="pricing-card">
                        <div class="pricing-title">Azuz X</div>
                        <ul class="pricing-features">
                            <li>Full Access to Azuz X</li>
                            <li>Multi Api</li>
                            <li>Script Hub</li>
                            <li>24/7 Support</li>
                            <li>94% UNCs</li>
                        </ul>
                        <a href="#" class="pricing-button">Get Azuz X Now!</a>
                    </div>
                </div>
            </div>

            <div id="tab4" class="tab-content">
                <h2>Moo Hub</h2>
                <div class="content-section">
                    <p>Coming Soon!</p>
                </div>
            </div>

            <div id="tab5" class="tab-content">
                <h2>Script Search</h2>
                <div class="content-section">
                    <div class="search-bar">
                        <input type="text" id="search-input" placeholder="Search scripts..."/>
                        <select id="filter-select">
                            <option value="">All</option>
                            <option value="free">Free</option>
                            <option value="paid">Paid</option>
                        </select>
                        <button id="search-button">Search</button>
                    </div>
                    <div id="error-message"></div>
                    <div id="scripts-grid" class="grid"></div>
                    <div class="pagination">
                        <button id="prev-button">Previous</button>
                        <button id="next-button">Next</button>
                    </div>
                </div>
            </div>

            <div id="tab6" class="tab-content">
                <h2>Latest Uploads</h2>
                <div class="content-section">
                    <div class="video-sort">
                        <button class="sort-button active" data-sort="date">Latest</button>
                        <button class="sort-button" data-sort="viewCount">Most Watched</button>
                        <button class="sort-button" data-sort="date-asc">Oldest</button>
                    </div>
                    <div id="youtube-videos" class="youtube-grid"></div>
                    <div class="pagination">
                        <button id="prev-videos">Previous</button>
                        <button id="next-videos">Next</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const tabButtons = document.querySelectorAll('.tab-button');
            const tabContents = document.querySelectorAll('.tab-content');

            tabButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const tabId = button.getAttribute('data-tab');
                    const newTab = document.getElementById(tabId);
                    
                    // Get indices for direction
                    const currentButton = document.querySelector('.tab-button.active');
                    const currentIndex = Array.from(tabButtons).indexOf(currentButton);
                    const newIndex = Array.from(tabButtons).indexOf(button);
                    
                    // Find current active tab
                    const currentTab = document.querySelector('.tab-content.active');
                    
                    if (currentTab !== newTab) {
                        // Remove active classes from buttons
                        tabButtons.forEach(btn => btn.classList.remove('active'));
                        button.classList.add('active');

                        // Set the direction based on button positions
                        const direction = newIndex > currentIndex ? 1 : -1;
                        
                        // Prepare the new tab
                        newTab.style.transform = `translateX(${direction * 50}px)`;
                        newTab.style.opacity = '0';
                        newTab.style.display = 'block';
                        
                        // Force reflow
                        newTab.offsetHeight;
                        
                        // Slide out current tab
                        currentTab.style.transform = `translateX(${direction * -50}px)`;
                        currentTab.style.opacity = '0';
                        
                        // Slide in new tab
                        newTab.style.transform = 'translateX(0)';
                        newTab.style.opacity = '1';
                        
                        // After animation, clean up
                        setTimeout(() => {
                            currentTab.classList.remove('active');
                            currentTab.style.display = 'none';
                            currentTab.style.transform = '';
                            currentTab.style.opacity = '';
                            
                            newTab.classList.add('active');
                        }, 300);
                    }
                });
            });
        });

        document.querySelector('.pricing-button').addEventListener('click', (e) => {
            e.preventDefault();
            const modal = document.getElementById('comingSoonModal');
            modal.classList.add('active');
            
            // Close modal when clicking outside
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    modal.classList.remove('active');
                }
            });
        });
    </script>

    <!-- Add this modal HTML -->
    <div class="modal" id="comingSoonModal">
        <div class="modal-content">
            <h2>Coming Soon!</h2>
        </div>
    </div>

    <script>
        const proxAPI = "https://scriptblox-api-proxy.vercel.app/api/fetch";
        const searchproxAPI = "https://scriptblox-api-proxy.vercel.app/api/search";
        const scriptsGrid = document.getElementById("scripts-grid");
        const searchInput = document.getElementById("search-input");
        const filter = document.getElementById("filter-select");
        const search = document.getElementById("search-button");
        const prev = document.getElementById("prev-button");
        const next = document.getElementById("next-button");
        const error_msg = document.getElementById("error-message");

        let currentPage = 1;
        let isModes = false;
        let Querys = "";
        let Modes = "";

        async function fetchScripts(page = 1) {
            try {
                const response = await fetch(`${proxAPI}?page=${page}`);
                if (!response.ok) throw new Error(`API Error: ${response.statusText}`);
                const data = await response.json();
                if (!data.result || !data.result.scripts.length) throw new Error("No scripts found.");
                displayScripts(data.result.scripts);
                error_msg.textContent = "";
            } catch (error) {
                displayError(error.message);
            }
        }

        async function searchScripts(query, mode, page = 1) {
            try {
                const url = new URL(searchproxAPI);
                url.searchParams.append("q", query);
                if (mode) url.searchParams.append("mode", mode);
                url.searchParams.append("page", page);
                const response = await fetch(url);
                if (!response.ok) throw new Error(`API Error: ${response.statusText}`);
                const data = await response.json();
                if (!data.result || !data.result.scripts.length) throw new Error("No search results found.");
                displayScripts(data.result.scripts);
                error_msg.textContent = "";
            } catch (error) {
                displayError(error.message);
            }
        }

        function displayScripts(scripts) {
            scriptsGrid.innerHTML = "";
            scripts.forEach((script) => {
                const imageSrc = script.game?.imageUrl
                    ? `https://scriptblox.com${script.game.imageUrl}`
                    : "https://c4.wallpaperflare.com/wallpaper/673/92/53/404-not-found-anime-girls-glowing-eyes-wallpaper-thumb.jpg";
                const card = document.createElement("div");
                card.className = "card";
                card.innerHTML = `
                    <img src="${imageSrc}" alt="${script.title}" onerror="this.src='https://c4.wallpaperflare.com/wallpaper/673/92/53/404-not-found-anime-girls-glowing-eyes-wallpaper-thumb.jpg';">
                    <div class="card-content">
                        <h2 class="card-title">${script.title}</h2>
                        <p class="card-game">Game: ${script.game?.name || "Universal"}</p>
                    </div>
                `;
                card.addEventListener("click", () => {
                    window.open(`https://scriptblox.com/script/${script.slug}`, "_blank");
                });
                scriptsGrid.appendChild(card);
            });
        }

        function displayError(message) {
            scriptsGrid.innerHTML = "";
            error_msg.textContent = message;
        }

        search.addEventListener("click", () => {
            Querys = searchInput.value.trim();
            Modes = filter.value;
            currentPage = 1;
            isModes = true;
            searchScripts(Querys, Modes, currentPage);
        });

        prev.addEventListener("click", () => {
            if (currentPage > 1) {
                currentPage--;
                isModes ? searchScripts(Querys, Modes, currentPage) : fetchScripts(currentPage);
            }
        });

        next.addEventListener("click", () => {
            currentPage++;
            isModes ? searchScripts(Querys, Modes, currentPage) : fetchScripts(currentPage);
        });

        // Initial load of scripts
        fetchScripts();
    </script>

    <script>
        const API_KEY = 'AIzaSyAbxuCvEQM_S_FO_M89X6834WvWSbwW-4M';
        const CHANNEL_ID = 'UCB52DQNDgeYCavcpjDKbOmw';
        let pageToken = '';
        let currentSort = 'date'; // Default sort

        async function fetchYoutubeVideos(pageToken = '') {
            try {
                const orderParam = currentSort === 'date-asc' ? 'date' : currentSort;
                const response = await fetch(
                    `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&channelId=${CHANNEL_ID}&part=snippet,id&order=${orderParam}&maxResults=12${pageToken ? `&pageToken=${pageToken}` : ''}`
                );
                const data = await response.json();
                
                // Get video IDs for statistics
                const videoIds = data.items
                    .filter(item => item.id.videoId)
                    .map(item => item.id.videoId)
                    .join(',');
                    
                // Fetch video statistics
                const statsResponse = await fetch(
                    `https://www.googleapis.com/youtube/v3/videos?key=${API_KEY}&id=${videoIds}&part=statistics`
                );
                const statsData = await statsResponse.json();
                
                // Combine video data with statistics
                data.items = data.items.map(item => {
                    const stats = statsData.items.find(stat => stat.id === item.id.videoId);
                    return {
                        ...item,
                        statistics: stats ? stats.statistics : null
                    };
                });
                
                if (currentSort === 'date-asc') {
                    data.items = data.items.reverse();
                }
                
                displayVideos(data.items);
                return data;
            } catch (error) {
                console.error('Error fetching YouTube videos:', error);
            }
        }

        function displayVideos(videos) {
            const container = document.getElementById('youtube-videos');
            container.innerHTML = '';

            videos.forEach(video => {
                if (video.id.videoId) {
                    const date = new Date(video.snippet.publishedAt);
                    const formattedDate = date.toLocaleDateString();
                    const viewCount = video.statistics?.viewCount 
                        ? formatViewCount(video.statistics.viewCount) 
                        : '0';
                    
                    const videoCard = document.createElement('div');
                    videoCard.className = 'video-card';
                    videoCard.innerHTML = `
                        <img class="video-thumbnail" src="${video.snippet.thumbnails.high.url}" alt="${video.snippet.title}">
                        <div class="video-info">
                            <h3 class="video-title">${video.snippet.title}</h3>
                            <p class="video-date">${formattedDate}</p>
                            <p class="video-views"><i class="fas fa-eye"></i> ${viewCount} views</p>
                        </div>
                    `;
                    
                    videoCard.addEventListener('click', () => {
                        window.open(`https://www.youtube.com/watch?v=${video.id.videoId}`, '_blank');
                    });
                    
                    container.appendChild(videoCard);
                }
            });
        }

        // Add this helper function to format view counts
        function formatViewCount(count) {
            if (count >= 1000000) {
                return (count / 1000000).toFixed(1) + 'M';
            } else if (count >= 1000) {
                return (count / 1000).toFixed(1) + 'K';
            }
            return count;
        }

        // Add event listeners for pagination
        document.getElementById('prev-videos').addEventListener('click', async () => {
            const data = await fetchYoutubeVideos(pageToken);
            if (data.prevPageToken) {
                pageToken = data.prevPageToken;
            }
        });

        document.getElementById('next-videos').addEventListener('click', async () => {
            const data = await fetchYoutubeVideos(pageToken);
            if (data.nextPageToken) {
                pageToken = data.nextPageToken;
            }
        });

        // Add sort button functionality
        document.querySelectorAll('.sort-button').forEach(button => {
            button.addEventListener('click', () => {
                // Update active state
                document.querySelectorAll('.sort-button').forEach(btn => 
                    btn.classList.remove('active')
                );
                button.classList.add('active');
                
                // Update sort and refresh videos
                currentSort = button.dataset.sort;
                pageToken = '';
                fetchYoutubeVideos();
            });
        });

        // Update the tab click handler to reset sort to 'date'
        document.querySelector('[data-tab="tab6"]').addEventListener('click', () => {
            currentSort = 'date';
            pageToken = '';
            document.querySelectorAll('.sort-button').forEach(btn => {
                btn.classList.remove('active');
                if (btn.dataset.sort === 'date') {
                    btn.classList.add('active');
                }
            });
            fetchYoutubeVideos();
        });
    </script>

    <div class="credits-modal">
        <div class="credits-content">
            <h2>Credits</h2>
            <p>Website created by @Premuix</p>
            <p>- If your looking for a web dev, you can contact me on discord</p>
            <div class="social-links">
                <a href="https://discord.gg/HxAA6Q3G" class="social-link" title="Discord">
                    <i class="fab fa-discord"></i>
                </a>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const creditsButton = document.querySelector('.credits-button');
            const creditsModal = document.querySelector('.credits-modal');

            creditsButton.addEventListener('click', () => {
                creditsModal.classList.add('active');
            });

            creditsModal.addEventListener('click', (e) => {
                if (e.target === creditsModal) {
                    creditsModal.classList.remove('active');
                }
            });
        });
    </script>
</body>
